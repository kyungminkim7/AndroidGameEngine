// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_HEADER_MSGS_H_
#define FLATBUFFERS_GENERATED_HEADER_MSGS_H_

#include "flatbuffers/flatbuffers.h"

namespace msgs {

struct Header;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4) Header FLATBUFFERS_FINAL_CLASS {
 private:
  uint32_t msg_type_id_;
  uint32_t msg_size_;

 public:
  Header()
      : msg_type_id_(0),
        msg_size_(0) {
  }
  Header(uint32_t _msg_type_id, uint32_t _msg_size)
      : msg_type_id_(flatbuffers::EndianScalar(_msg_type_id)),
        msg_size_(flatbuffers::EndianScalar(_msg_size)) {
  }
  uint32_t msg_type_id() const {
    return flatbuffers::EndianScalar(msg_type_id_);
  }
  uint32_t msg_size() const {
    return flatbuffers::EndianScalar(msg_size_);
  }
};
FLATBUFFERS_STRUCT_END(Header, 8);

}  // namespace msgs

#endif  // FLATBUFFERS_GENERATED_HEADER_MSGS_H_
